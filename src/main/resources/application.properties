#
# Application properties
#
server.port=8009
spring.application.name=mollysclub


#
# JDBC properties - H2
#
spring.datasource.url=jdbc:h2:mem:testdb
spring.datasource.driverClassName=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=password
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.trace=false
spring.h2.console.settings.web-allow-others=false

#
# Java Mail - H2
#
spring.mail.host=localhost
spring.mail.port=1025
spring.mail.username=admin
spring.mail.password=password

spring.mail.properties.mail.smtp.ssl.trust=*
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.connectiontimeout=5000

#
# JDBC properties - MySQL DB
#
# spring.datasource.url=jdbc:mysql://localhost:3306/javakitdb?createDatabaseIfNotExist=true&allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
# spring.datasource.username=javakitdbadmin
# spring.datasource.password=p@ssw0rd

# #
# ## Hibernate Properties
# ### The SQL dialect makes Hibernate generate better SQL for the chosen database
# spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect
# ### spring.jpa.hibernate.ddl-auto - will automatically create/update the tables in the database 
# ### according to the entities in our application.
# spring.jpa.hibernate.ddl-auto=update

#
# Spring Data REST Properties
#
# spring.data.rest.base-path=/api/v1
# spring.data.rest.default-page-size=10
# spring.data.rest.max-page-size=50

#
# Spring Actuator Properties
#
# Expose all actuator endpoints
# management.endpoints.enabled-by-default=true
# management.endpoints.web.exposure.include=*
# # Info Metrics available at /actuator/info
# info.app.name=PeopleOps
# info.app.description=Resource management application
# info.app.version=1.0.0
# Thread Dump available at /actuator/threaddump
# Request Mappings available at /actuator/mappings

#
# Security using application properties
#
#spring.security.user.name=admin
#spring.security.user.password=p@ssw0rd

#
# Security JDBC properties - MySQL DB
#
# security.datasource.url=jdbc:mysql://localhost:3306/peopleopsdb?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
# security.datasource.username=peopleopsadmin
# security.datasource.password=p@ssw0rd

#
# JDBC properties - MySQL DB
#
# app.datasource.jdbc-url=jdbc:mysql://localhost:3306/peopleopsdb?allowPublicKeyRetrieval=true&useSSL=false&serverTimezone=UTC
# app.datasource.username=peopleopsadmin
# app.datasource.password=p@ssw0rd


#
# Swagger properties
#
#To execute the Spring Boot REST Api application, we were using the below commands
#
#In Dev environment-
#
#nohup java -jar -Dspring.profiles.active=dev target/myapp-1.0.jar &

# > java -jar -Dspring.profiles.active=dev target/myapp-1.0.jar --server.port=8080

#In Production environment-
#
#nohup java -jar -Dspring.profiles.active=prod target/myapp-1.0.jar &
mollysclub.swagger.on=true

# 
# JWT Auth Properties
#
app.jwt.secretKey=AWFNJJHLLWPZMFJajeuncz5879APONZVAW2ncmbORMZNTQPWMABXZMQPIEYXVANHE
#tokenExpirationAfterMins =>  30mins
app.jwt.tokenExpirationAfterMins=30
app.jwt.tokenPrefix=Bearer 
app.jwt.headerString=Authorization
app.jwt.signupUrl=/api/v1/auth/register

